trigger:
- 'main'
pool:
  vmImage: 'ubuntu-latest'
 
variables:
  buildConfiguration: 'Release'
  leaderboardRepository: 'leaderboard'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    steps:
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        containerRegistry: 'AksRaul'
        repository: '$(webRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Build.Repository.LocalPath)'
        tags: '$(tag)'

    - task: Docker@2
      displayName: 'Build and push the leaderboard image to container registry'
      inputs:
        containerRegistry: 'AksRaul'
        repository: '$(leaderboardRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Build.Repository.LocalPath)'
        tags: '$(tag)'
    - publish: '$(Build.SourceDirectory)/manifests' 
      artifact: manifest   


- stage: 'Deploy'
  displayName: 'Deploy the containers'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'spike.default'
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: manifests          
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: 'Container Registry Connection'
              kubernetesServiceConnection: 'Kubernetes Cluster Connection'
              namespace: 'default'
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: 'Kubernetes Cluster Connection'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
               $(imagePullSecret)
              containers: |
                $(RegistryName)/$(webRepository):$(tag)
                $(RegistryName)/$(leaderboardRepository):$(tag)

